{"ast":null,"code":"import _slicedToArray from \"/Users/tank/git/React-Hooks-tutorial/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tank/git/React-Hooks-tutorial/src/components/CounterWithEffect.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // This is a Hook Effect\n// Effects are similar to componentDidMount and componentDidUpdate:\n\nvar Counter = function Counter() {\n  // This is a hook. Starts set to 0, modified with setCount, state viewed from count\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  useEffect(function () {\n    // Update the document title using the browser API\n    document.title = \"You clicked \".concat(count, \" times\");\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Click me\"));\n};\n\nexport default Counter;","map":{"version":3,"sources":["/Users/tank/git/React-Hooks-tutorial/src/components/CounterWithEffect.js"],"names":["React","useState","useEffect","Fragment","Counter","count","setCount","document","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CAEA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpB;AAFoB,kBAGMH,QAAQ,CAAC,CAAD,CAHd;AAAA;AAAA,MAGbI,KAHa;AAAA,MAGNC,QAHM;;AAMpBJ,EAAAA,SAAS,CAAC,YAAM;AACd;AACAK,IAAAA,QAAQ,CAACC,KAAT,yBAAgCH,KAAhC;AACD,GAHQ,CAAT;AAKA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBA,KAAhB,WADF,EAEE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAQD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\n\n// This is a Hook Effect\n// Effects are similar to componentDidMount and componentDidUpdate:\n\nconst Counter = () => {\n\n  // This is a hook. Starts set to 0, modified with setCount, state viewed from count\n  const [count, setCount] = useState(0);\n\n  \n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <Fragment>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </Fragment>\n  );\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}