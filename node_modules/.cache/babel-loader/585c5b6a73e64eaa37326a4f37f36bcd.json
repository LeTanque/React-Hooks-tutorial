{"ast":null,"code":"import _toConsumableArray from \"/Users/tank/git/React-Hooks-tutorial/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/tank/git/React-Hooks-tutorial/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tank/git/React-Hooks-tutorial/src/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport UserTable from './tables/UserTable';\nimport AddUserForm from './forms/AddUserForm';\n\nvar App = function App() {\n  // Functional component doing cool class component stuff\n  var usersData = [{\n    id: 1,\n    name: 'Tania',\n    username: 'floppydiskette'\n  }, {\n    id: 2,\n    name: 'Craig',\n    username: 'siliconeidolon'\n  }, {\n    id: 3,\n    name: 'Ben',\n    username: 'benisphere'\n  }];\n\n  var _useState = useState(usersData),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1]; // users and setUsers are dynamic\n\n\n  var lastUID = users[users.length - 1].id; // users is current state of users. usersData is the initial state only.\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editing = _useState4[0],\n      setEditing = _useState4[1]; // This is basically 'edit mode'\n\n\n  var addUser = function addUser(user) {\n    user.id = lastUID + 1;\n    setUsers([].concat(_toConsumableArray(users), [user]));\n  }; // Set state using setUsers\n  // users is current state, filter to create an array of everything except the target user\n\n\n  var deleteUser = function deleteUser(id) {\n    setUsers(users.filter(function (user) {\n      return user.id !== id;\n    }));\n  }; // console.log(lastUID)\n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"CRUD App with Hooks\"), React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add user\"), React.createElement(AddUserForm, {\n    addUser: addUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"flex-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"View users\"), React.createElement(UserTable, {\n    users: users,\n    deleteUser: deleteUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tank/git/React-Hooks-tutorial/src/App.js"],"names":["React","useState","Fragment","UserTable","AddUserForm","App","usersData","id","name","username","users","setUsers","lastUID","length","editing","setEditing","addUser","user","deleteUser","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAG;AACnB,MAAMC,SAAS,GAAG,CAChB;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GADgB,EAEhB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAFgB,EAGhB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,KAAf;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAHgB,CAAlB;;AADgB,kBAOYR,QAAQ,CAACK,SAAD,CAPpB;AAAA;AAAA,MAORI,KAPQ;AAAA,MAODC,QAPC,kBAOkC;;;AAClD,MAAMC,OAAO,GAAGF,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAL,CAAwBN,EAAxC,CARgB,CAQkC;;AARlC,mBASgBN,QAAQ,CAAC,KAAD,CATxB;AAAA;AAAA,MASRa,OATQ;AAAA,MASCC,UATD,kBASkC;;;AAElD,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AACtBA,IAAAA,IAAI,CAACV,EAAL,GAAUK,OAAO,GAAG,CAApB;AACAD,IAAAA,QAAQ,8BAAMD,KAAN,IAAaO,IAAb,GAAR;AACD,GAHD,CAXgB,CAgBhB;AACA;;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAX,EAAE,EAAI;AACvBI,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,UAAAF,IAAI;AAAA,aAAIA,IAAI,CAACV,EAAL,KAAYA,EAAhB;AAAA,KAAjB,CAAD,CAAR;AACD,GAFD,CAlBgB,CAsBhB;;;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAES,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEN,KAAlB;AAAyB,IAAA,UAAU,EAAEQ,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CAFF,CAFF,CADF;AAmBD,CA1CD;;AA4CA,eAAeb,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport UserTable from './tables/UserTable';\nimport AddUserForm from './forms/AddUserForm';\n\n\n\nconst App = () => {  // Functional component doing cool class component stuff\n  const usersData = [\n    { id: 1, name: 'Tania', username: 'floppydiskette' },\n    { id: 2, name: 'Craig', username: 'siliconeidolon' },\n    { id: 3, name: 'Ben', username: 'benisphere' },\n  ]\n\n  const [ users, setUsers ] = useState(usersData);  // users and setUsers are dynamic\n  const lastUID = users[users.length - 1].id;       // users is current state of users. usersData is the initial state only.\n  const [ editing, setEditing ] = useState(false);  // This is basically 'edit mode'\n\n  const addUser = user => {\n    user.id = lastUID + 1\n    setUsers([ ...users, user ])\n  }\n\n  // Set state using setUsers\n  // users is current state, filter to create an array of everything except the target user\n  const deleteUser = id => {\n    setUsers(users.filter(user => user.id !== id)); \n  }\n\n  // console.log(lastUID)\n  return (\n    <Fragment>\n\n      <div className=\"container\">\n        <h1>CRUD App with Hooks</h1>\n        <div className=\"flex-row\">\n          <div className=\"flex-large\">\n            <h2>Add user</h2>\n            <AddUserForm addUser={addUser} />\n          </div>\n          <div className=\"flex-large\">\n            <h2>View users</h2>\n            <UserTable users={users} deleteUser={deleteUser} />\n          </div>\n        </div>\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}