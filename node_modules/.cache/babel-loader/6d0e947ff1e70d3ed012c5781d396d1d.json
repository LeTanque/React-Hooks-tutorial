{"ast":null,"code":"import _toConsumableArray from \"/Users/tank/git/React-Hooks-tutorial/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/tank/git/React-Hooks-tutorial/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tank/git/React-Hooks-tutorial/src/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport UserTable from './tables/UserTable';\nimport AddUserForm from './forms/AddUserForm';\nimport EditUserForm from './forms/EditUserForm';\n\nvar App = function App() {\n  // Functional component doing cool class component stuff\n  var usersData = [{\n    id: 1,\n    name: 'Tania',\n    username: 'floppydiskette'\n  }, {\n    id: 2,\n    name: 'Craig',\n    username: 'siliconeidolon'\n  }, {\n    id: 3,\n    name: 'Ben',\n    username: 'benisphere'\n  }];\n  var initialFormState = {\n    id: null,\n    name: '',\n    username: ''\n  };\n\n  var _useState = useState(usersData),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1]; // users and setUsers are dynamic\n\n\n  var lastUID = users[users.length - 1].id; // users is current state of users. usersData is the initial state only.\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editing = _useState4[0],\n      setEditing = _useState4[1]; // This is basically 'edit mode'\n\n\n  var _useState5 = useState(initialFormState),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentUser = _useState6[0],\n      setCurrentUser = _useState6[1]; // Toggled update mode\n\n\n  var addUser = function addUser(user) {\n    user.id = lastUID + 1;\n    setUsers([].concat(_toConsumableArray(users), [user]));\n  }; // Set state using setUsers\n  // users is current state, filter to create an array of everything except the target user\n\n\n  var deleteUser = function deleteUser(id) {\n    setUsers(users.filter(function (user) {\n      return user.id !== id;\n    }));\n  };\n\n  var editUser = function editUser(user) {\n    setEditing(true);\n    setCurrentUser({\n      id: user.id,\n      name: user.name,\n      username: user.username\n    });\n  };\n\n  var updateUser = function updateUser(id, updatedUser) {\n    setEditing(false);\n    setUsers(users.map(function (user) {\n      return user.id === id ? updatedUser : user;\n    }));\n  }; // console.log(lastUID)\n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"CRUD App with Hooks\"), React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, editing ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Edit user\"), React.createElement(EditUserForm, {\n    editing: editing,\n    setEditing: setEditing,\n    currentUser: currentUser,\n    updateUser: updateUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Add user\"), React.createElement(AddUserForm, {\n    addUser: addUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"flex-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"View users\"), React.createElement(UserTable, {\n    users: users,\n    deleteUser: deleteUser,\n    editUser: editUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tank/git/React-Hooks-tutorial/src/App.js"],"names":["React","useState","Fragment","UserTable","AddUserForm","EditUserForm","App","usersData","id","name","username","initialFormState","users","setUsers","lastUID","length","editing","setEditing","currentUser","setCurrentUser","addUser","user","deleteUser","filter","editUser","updateUser","updatedUser","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport UserTable from './tables/UserTable';\nimport AddUserForm from './forms/AddUserForm';\nimport EditUserForm from './forms/EditUserForm';\n\n\n\nconst App = () => {  // Functional component doing cool class component stuff\n  const usersData = [\n    { id: 1, name: 'Tania', username: 'floppydiskette' },\n    { id: 2, name: 'Craig', username: 'siliconeidolon' },\n    { id: 3, name: 'Ben', username: 'benisphere' },\n  ]\n  const initialFormState = { id: null, name: '', username: '' }\n\n  const [ users, setUsers ] = useState(usersData);  // users and setUsers are dynamic\n  const lastUID = users[users.length - 1].id;       // users is current state of users. usersData is the initial state only.\n  const [ editing, setEditing ] = useState(false);  // This is basically 'edit mode'\n  const [ currentUser, setCurrentUser ] = useState(initialFormState); // Toggled update mode\n\n  const addUser = user => {\n    user.id = lastUID + 1\n    setUsers([ ...users, user ])\n  }\n\n  // Set state using setUsers\n  // users is current state, filter to create an array of everything except the target user\n  const deleteUser = id => {\n    setUsers(users.filter(user => user.id !== id)); \n  }\n\n  const editUser = user => {\n    setEditing(true);\n\n    setCurrentUser({\n      id:user.id,\n      name:user.name,\n      username:user.username\n    })\n  }\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false);\n\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)));\n  }\n\n  // console.log(lastUID)\n  return (\n    <Fragment>\n\n      <div className=\"container\">\n          <h1>CRUD App with Hooks</h1>\n          <div className=\"flex-row\">\n          <div className=\"flex-large\">\n            {editing ? (\n              <div>\n                <h2>Edit user</h2>\n                <EditUserForm\n                  editing={editing}\n                  setEditing={setEditing}\n                  currentUser={currentUser}\n                  updateUser={updateUser}\n                />\n              </div>\n            ) : (\n              <div>\n                <h2>Add user</h2>\n                <AddUserForm addUser={addUser} />\n              </div>\n            )}\n          </div>\n          <div className=\"flex-large\">\n            <h2>View users</h2>\n            <UserTable users={users} deleteUser={deleteUser} editUser={editUser} />\n          </div>\n        </div>\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}